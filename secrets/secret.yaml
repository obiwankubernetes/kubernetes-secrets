apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
stringData:
  secret.json: |-
    {
      "api_key" : "somesecretgoeshere"
    }

# 
# 1. mount config and secret -> docker run -it -v ${PWD}/mainfolder/configs/:/configs -v ${PWD}/mainfolder/secrets/:/secrets <dockerrepo>:<imagename>
# 2. init secrets _> kubectl apply -f .\secrets\secret.yaml -> or kubectl create secret generic mysecret --from-file .\secrets\secret.json
# 3. check to see if secret created -> kubectl get secrets
#         volumeMounts:
      #   - name: secret-volume
      #     mountPath: /secrets/
      #   - name: config-volume
      #     mountPath: /configs/
      # volumes:
      # - name: secret-volume
      #   secret:
      #     secretName: mysecret
      # - name: config-volume
      #   configMap:
      #     name: example-config #name of our configmap objectput secret in deployment.yaml file
# 4. init deployment manifest with secrets and secrets mount -> kubectl apply -f .\deployments\deployment.yaml
# 5. check if k8 deployed and running-> kubectl get deploy and kubectl get pods
# 6. check to see if config and secrets were mounted on deployed and running k8 -> kubectl logs <podname>
